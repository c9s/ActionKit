<?php
/**
 * THIS FILE IS AUTO-GENERATED BY LAZYRECORD,
 * PLEASE DO NOT MODIFY THIS FILE DIRECTLY.
 * 
 * Last Modified: October 7th at 5:59pm
 */
namespace OrderBundle\Model;


use LazyRecord;
use LazyRecord\Schema\RuntimeSchema;
use LazyRecord\Schema\Relationship;

class OrderItemSchemaProxy extends RuntimeSchema
{

    public static $column_names = array (
  0 => 'id',
  1 => 'quantity',
  2 => 'subtotal',
);
    public static $column_hash = array (
  'id' => 1,
  'quantity' => 1,
  'subtotal' => 1,
);
    public static $mixin_classes = array (
);
    public static $column_names_include_virtual = array (
  0 => 'id',
  1 => 'quantity',
  2 => 'subtotal',
);

    const schema_class = 'OrderBundle\\Model\\OrderItemSchema';
    const collection_class = 'OrderBundle\\Model\\OrderItemCollection';
    const model_class = 'OrderBundle\\Model\\OrderItem';
    const model_name = 'OrderItem';
    const model_namespace = 'OrderBundle\\Model';
    const primary_key = 'id';
    const table = 'order_items';
    const label = 'OrderItem';

    public function __construct()
    {
        /** columns might have closure, so it can not be const */
        $this->columnData      = array( 
  'id' => array( 
      'name' => 'id',
      'attributes' => array( 
          'locales' => NULL,
          'attributes' => array( 
              'autoIncrement' => true,
            ),
          'name' => 'id',
          'primary' => true,
          'unsigned' => NULL,
          'type' => 'int',
          'isa' => 'int',
          'notNull' => true,
          'enum' => NULL,
          'set' => NULL,
          'attributeTypes' => array( 
              'primary' => 6,
              'size' => 3,
              'autoIncrement' => 6,
              'immutable' => 6,
              'unique' => 6,
              'null' => 6,
              'notNull' => 6,
              'typeConstraint' => 6,
              'timezone' => 6,
              'renderable' => 6,
              'label' => 0,
              'desc' => 2,
              'comment' => 2,
              'refer' => 2,
              'default' => 0,
              'validator' => 0,
              'validatorArgs' => 0,
              'validValues' => 0,
              'validValueBuilder' => 5,
              'optionValues' => 0,
              'validPairs' => 0,
              'canonicalizer' => 5,
              'virtual' => 6,
              'required' => 6,
              'filter' => 5,
              'inflator' => 5,
              'deflator' => 5,
              'renderAs' => 2,
              'widgetAttributes' => 1,
              'contentType' => 2,
              'primaryField' => 6,
              'length' => 3,
              'decimals' => 3,
            ),
          'autoIncrement' => true,
        ),
    ),
  'quantity' => array( 
      'name' => 'quantity',
      'attributes' => array( 
          'locales' => NULL,
          'attributes' => array( 
              'required' => true,
            ),
          'name' => 'quantity',
          'primary' => NULL,
          'unsigned' => NULL,
          'type' => 'int',
          'isa' => 'int',
          'notNull' => true,
          'enum' => NULL,
          'set' => NULL,
          'attributeTypes' => array( 
              'primary' => 6,
              'size' => 3,
              'autoIncrement' => 6,
              'immutable' => 6,
              'unique' => 6,
              'null' => 6,
              'notNull' => 6,
              'typeConstraint' => 6,
              'timezone' => 6,
              'renderable' => 6,
              'label' => 0,
              'desc' => 2,
              'comment' => 2,
              'refer' => 2,
              'default' => 0,
              'validator' => 0,
              'validatorArgs' => 0,
              'validValues' => 0,
              'validValueBuilder' => 5,
              'optionValues' => 0,
              'validPairs' => 0,
              'canonicalizer' => 5,
              'virtual' => 6,
              'required' => 6,
              'filter' => 5,
              'inflator' => 5,
              'deflator' => 5,
              'renderAs' => 2,
              'widgetAttributes' => 1,
              'contentType' => 2,
              'primaryField' => 6,
              'length' => 3,
              'decimals' => 3,
            ),
          'required' => true,
        ),
    ),
  'subtotal' => array( 
      'name' => 'subtotal',
      'attributes' => array( 
          'locales' => NULL,
          'attributes' => array( 
            ),
          'name' => 'subtotal',
          'primary' => NULL,
          'unsigned' => NULL,
          'type' => 'int',
          'isa' => 'int',
          'notNull' => NULL,
          'enum' => NULL,
          'set' => NULL,
          'attributeTypes' => array( 
              'primary' => 6,
              'size' => 3,
              'autoIncrement' => 6,
              'immutable' => 6,
              'unique' => 6,
              'null' => 6,
              'notNull' => 6,
              'typeConstraint' => 6,
              'timezone' => 6,
              'renderable' => 6,
              'label' => 0,
              'desc' => 2,
              'comment' => 2,
              'refer' => 2,
              'default' => 0,
              'validator' => 0,
              'validatorArgs' => 0,
              'validValues' => 0,
              'validValueBuilder' => 5,
              'optionValues' => 0,
              'validPairs' => 0,
              'canonicalizer' => 5,
              'virtual' => 6,
              'required' => 6,
              'filter' => 5,
              'inflator' => 5,
              'deflator' => 5,
              'renderAs' => 2,
              'widgetAttributes' => 1,
              'contentType' => 2,
              'primaryField' => 6,
              'length' => 3,
              'decimals' => 3,
            ),
        ),
    ),
);
        $this->columnNames     = array( 
  'id',
  'quantity',
  'subtotal',
);
        $this->primaryKey      = 'id';
        $this->table           = 'order_items';
        $this->modelClass      = 'OrderBundle\\Model\\OrderItem';
        $this->collectionClass = 'OrderBundle\\Model\\OrderItemCollection';
        $this->label           = 'OrderItem';
        $this->relations       = array( 
);
        $this->readSourceId    = 'default';
        $this->writeSourceId    = 'default';
        parent::__construct();
    }


    /**
     * Code block for message id parser.
     */
    private function __() {
        _('OrderItem');
    }

}
